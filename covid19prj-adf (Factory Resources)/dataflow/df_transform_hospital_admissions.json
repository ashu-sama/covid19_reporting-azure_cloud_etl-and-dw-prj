{
	"name": "df_transform_hospital_admissions",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_hospital_admissions",
						"type": "DatasetReference"
					},
					"name": "HospitalAdmissionsSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_covid19prjdls",
						"type": "LinkedServiceReference"
					},
					"name": "dimCountry"
				},
				{
					"linkedService": {
						"referenceName": "ls_covid19prjdls",
						"type": "LinkedServiceReference"
					},
					"name": "dimDate"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admissions_daily",
						"type": "DatasetReference"
					},
					"name": "hospitalAdmissionsDailySink"
				},
				{
					"dataset": {
						"referenceName": "ds_processed_hospital_admissions_weekly",
						"type": "DatasetReference"
					},
					"name": "hospitalAdmissionsWeeklySink"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "lookupCountry"
				},
				{
					"name": "select2"
				},
				{
					"name": "splitDailyAndWeeklyData"
				},
				{
					"name": "select3"
				},
				{
					"name": "pivotIndicatorColumn"
				},
				{
					"name": "MapDrifted1",
					"description": "Creates an explicit mapping for each drifted column"
				},
				{
					"name": "aggregateEcdcYearWeek"
				},
				{
					"name": "joinDimDate"
				},
				{
					"name": "selectReqFields"
				},
				{
					"name": "pivotIndicator"
				},
				{
					"name": "renamePivotedColumn"
				},
				{
					"name": "sortDaily"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> HospitalAdmissionsSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'lookup',",
				"     folderPath: 'dim_country',",
				"     fileName: 'country_lookup.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> dimCountry",
				"source(output(",
				"          date_key as string,",
				"          date as date,",
				"          year as string,",
				"          month as short,",
				"          day as short,",
				"          day_name as string,",
				"          day_of_year as short,",
				"          week_of_month as short,",
				"          week_of_year as short,",
				"          month_name as string,",
				"          year_month as integer,",
				"          year_week as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'lookup',",
				"     folderPath: 'dim_date',",
				"     fileName: 'dim_date.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> dimDate",
				"HospitalAdmissionsSource select(mapColumn(",
				"          country,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          indicator,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, dimCountry lookup(select1@country == dimCountry@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupCountry",
				"lookupCountry select(mapColumn(",
				"          country = select1@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          reported_year_week,",
				"          indicator,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 split(indicator == 'Daily hospital occupancy' || indicator == 'Daily ICU occupancy',",
				"     disjoint: false) ~> splitDailyAndWeeklyData@(Daily, Weekly)",
				"splitDailyAndWeeklyData@Daily select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          indicator,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          source),",
				"     pivotBy(indicator),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotIndicatorColumn",
				"pivotIndicatorColumn derive(icu_occupancy_count = toInteger(byName('Daily ICU occupancy_count')),",
				"          hospital_occupancy_count = toInteger(byName('Daily hospital occupancy_count'))) ~> MapDrifted1",
				"dimDate aggregate(groupBy(ecdc_year_week = year+'-W'+right(year_week,2)),",
				"     reported_week_startdate = min(date),",
				"          reported_week_enddate = max(date)) ~> aggregateEcdcYearWeek",
				"splitDailyAndWeeklyData@Weekly, aggregateEcdcYearWeek join(reported_year_week == ecdc_year_week,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinDimDate",
				"joinDimDate select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_startdate,",
				"          reported_week_enddate,",
				"          indicator,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectReqFields",
				"selectReqFields pivot(groupBy(country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_startdate,",
				"          reported_week_enddate,",
				"          source),",
				"     pivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
				"     count = sum(value),",
				"     columnNaming: '$V_$N',",
				"     lateral: true) ~> pivotIndicator",
				"pivotIndicator select(mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_startdate,",
				"          reported_week_enddate,",
				"          new_hospital_admissions_count = {Weekly new hospital admissions per 100k_count},",
				"          new_icu_admissions_count = {Weekly new ICU admissions per 100k_count},",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> renamePivotedColumn",
				"MapDrifted1 sort(desc(reported_date, false),",
				"     asc(country, false)) ~> sortDaily",
				"renamePivotedColumn sort(desc(reported_year_week, true),",
				"     asc(country, true),",
				"     partitionBy('hash', 1)) ~> sort1",
				"sortDaily sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['hospital_admissions_daily.csv'],",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_date,",
				"          icu_occupancy_count,",
				"          hospital_occupancy_count,",
				"          source",
				"     ),",
				"     partitionBy('hash', 1)) ~> hospitalAdmissionsDailySink",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['hospital_admissions_weekly.csv'],",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population,",
				"          reported_year_week,",
				"          reported_week_startdate,",
				"          reported_week_enddate,",
				"          new_hospital_admissions_count,",
				"          new_icu_admissions_count,",
				"          source",
				"     ),",
				"     partitionBy('hash', 1)) ~> hospitalAdmissionsWeeklySink"
			]
		}
	}
}